From 26756fa6727bd7b0589bad28598aaf10078b4c25 Mon Sep 17 00:00:00 2001
From: tomasz-karczewski-red <tomasz.karczewski@redembedded.com>
Date: Wed, 2 Oct 2024 16:13:33 +0200

ONEM-36378 handling OnBindLicense callback / bind_license_callback event

---
 Source/ocdm/open_cdm.h      | 11 +++++++++++
 Source/ocdm/open_cdm_impl.h | 22 ++++++++++++++++++++++
 2 files changed, 33 insertions(+)

diff --git a/Source/ocdm/open_cdm.h b/Source/ocdm/open_cdm.h
index 52a1991..51b60ab 100644
--- a/Source/ocdm/open_cdm.h
+++ b/Source/ocdm/open_cdm.h
@@ -246,6 +246,17 @@ typedef struct {
     * \param userData Pointer passed along when \ref opencdm_construct_session was issued.
     */
     void (*keys_updated_callback)(const struct OpenCDMSession* session, void* userData);
+
+    /**
+     * TODO
+     *
+    * \param session The session the notification applies to.
+    * \param userData Pointer passed along when \ref opencdm_construct_session was issued.
+     *\param callbackType description
+     *\param callbackData description
+     */
+    void (*bind_license_callback)(const OpenCDMSession* session, void* userData, uint32_t callbackType, const void *callbackData);
+
 } OpenCDMSessionCallbacks;
 
 /**
diff --git a/Source/ocdm/open_cdm_impl.h b/Source/ocdm/open_cdm_impl.h
index 1daaab8..2a51c30 100644
--- a/Source/ocdm/open_cdm_impl.h
+++ b/Source/ocdm/open_cdm_impl.h
@@ -22,6 +22,7 @@
 
 #include <interfaces/IContentDecryption.h>
 #include <interfaces/IOCDM.h>
+#include <interfaces/DRMCallbackSerialize.h>
 #include "Module.h"
 #include "open_cdm.h"
 
@@ -361,6 +362,11 @@ private:
             _parent.OnKeyStatusesUpdated();
         }
 
+        void OnBindLicense(uint32_t callbackType, const uint8_t *licenseMessage, const uint8_t licenseMessageLength) override
+        {
+            _parent.OnBindLicense(callbackType, licenseMessage, licenseMessageLength);
+        }
+
         BEGIN_INTERFACE_MAP(Sink)
         INTERFACE_ENTRY(Exchange::ISession::ICallback)
         END_INTERFACE_MAP
@@ -838,6 +844,22 @@ protected:
             _callback->keys_updated_callback(this, _userData);
         }
     }
+
+    void OnBindLicense(uint32_t callbackType, const uint8_t *licenseMessage, const uint8_t licenseMessageLength) {
+        if ((_callback != nullptr) && (_callback->bind_license_callback)) {
+            switch (callbackType) {
+                case PRD30_EXTENDED_RESTRICTION_CONDITION:
+                    {
+                        CDMi::PRD30_EXTENDED_RESTRICTION_CONDITION_DATA_Deserializer deserializer {licenseMessage, licenseMessageLength};
+                        _callback->bind_license_callback(this, _userData, callbackType, static_cast<void*>(&deserializer.obj));
+                    }
+                    break;
+                default:
+                    TRACE_L1("Unhandled bind license callback type: %x", callbackType);
+                    break;
+            }
+        }
+    }
 #ifdef USE_SVP
 public:
     void* GetSVPContext() const
-- 
2.25.1

