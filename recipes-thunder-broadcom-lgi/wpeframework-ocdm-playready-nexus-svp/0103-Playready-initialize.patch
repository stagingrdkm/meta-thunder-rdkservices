Nikolay Nikolov(nnikolov@libertyglobal.com)
ONEM-18285 Fix PlayReady Initialization

Index: OCDM-Playready-Nexus-SVP/MediaSystem.cpp
===================================================================
--- OCDM-Playready-Nexus-SVP.orig/MediaSystem.cpp
+++ OCDM-Playready-Nexus-SVP/MediaSystem.cpp
@@ -131,6 +131,7 @@ public:
         NEXUS_Error rc;
         DRM_RESULT dr = DRM_SUCCESS;
 
+        BKNI_Memset(&m_oemSettings, 0, sizeof(OEM_Settings));
         NxClient_GetDefaultJoinSettings(&joinSettings);
         strncpy(joinSettings.name, "playready3x", NXCLIENT_MAX_NAME);
         joinSettings.ignoreStandbyRequest = true;
@@ -159,6 +160,9 @@ public:
             delete [] m_meteringCertificate;
             m_meteringCertificate = nullptr;
         }
+        delete drmdir_;
+        delete m_oemSettings.binFileName;
+        delete m_oemSettings.defaultRWDirName;
         ASSERT(m_poAppContext.get() == nullptr);
         NxClient_Free(&m_nxAllocResults);
         NxClient_Uninit();
@@ -201,10 +205,14 @@ public:
             DeinitializeSystem();
         }
 
+        delete m_oemSettings.binFileName;
+        delete m_oemSettings.defaultRWDirName;
+        m_oemSettings.binFileName = nullptr;
+        m_oemSettings.defaultRWDirName = nullptr;
+
         WPEFramework::Core::Directory(m_readDir.c_str()).CreatePath();
         
         NEXUS_ClientConfiguration platformConfig;
-        OEM_Settings oemSettings;
         NEXUS_MemoryAllocationSettings heapSettings;
         DRM_RESULT dr = DRM_SUCCESS;
 
@@ -222,12 +230,16 @@ public:
             }
         }
 
-        BKNI_Memset(&oemSettings, 0, sizeof(OEM_Settings));
-        oemSettings.heap = heapSettings.heap;
+        string playreadyPath;
+        Core::SystemInfo::GetEnvironment(_T("PLAYREADYKEY_PATH"), playreadyPath);
+
+        m_oemSettings.heap = heapSettings.heap;
+        m_oemSettings.binFileName = createDrmWchar(playreadyPath);
+        m_oemSettings.defaultRWDirName = createDrmWchar(m_readDir);
 
-        ChkDR(Drm_Platform_Initialize((void *)&oemSettings));
+        ChkDR(Drm_Platform_Initialize((void *)&m_oemSettings));
         
-        m_drmOemContext = oemSettings.f_pOEMContext;
+        m_drmOemContext = m_oemSettings.f_pOEMContext;
         ChkMem(m_drmOemContext);
 
         CreateSystemExt();
@@ -261,6 +273,10 @@ public:
         }
 
         Drm_Platform_Uninitialize(m_drmOemContext);
+        delete m_oemSettings.binFileName;
+        delete m_oemSettings.defaultRWDirName;
+        m_oemSettings.binFileName = nullptr;
+        m_oemSettings.defaultRWDirName = nullptr;
     }
 
     CDMi_RESULT CreateMediaKeySession(
@@ -810,6 +826,7 @@ public:
             cr =  CDMi_S_FALSE;
             LOGGER(LERROR_,  "Error in creating system ext,  0x%08lX", dr);
         }
+        delete dstrHDSPath.pwszString;
 
         return cr;
     }
@@ -861,6 +878,7 @@ public:
 private:
     DRM_WCHAR* drmdir_;
 
+    OEM_Settings m_oemSettings;
     DRM_VOID *m_drmOemContext;
     NxClient_AllocResults m_nxAllocResults;
 
