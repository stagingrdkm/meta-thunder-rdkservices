--- old/Policy.h	2019-05-06 16:57:40.232632022 -0400
+++ new/Policy.h	2019-05-06 16:58:27.252441953 -0400
@@ -23,6 +23,8 @@
 using namespace wvcdm;
 
 const std::string kDefaultServerCertificate = a2bs_hex(
+#ifdef ENABLE_UAT_CERT_OPTION
+    // NOTE: Provider ID = staging.google.com
     "0ABF020803121028703454C008F63618ADE7443DB6C4C8188BE7F99005228E023082010A02"
     "82010100B52112B8D05D023FCC5D95E2C251C1C649B4177CD8D2BEEF355BB06743DE661E3D"
     "2ABC3182B79946D55FDC08DFE95407815E9A6274B322A2C7F5E067BB5F0AC07A89D45AEA94"
@@ -42,7 +44,33 @@
     "92C72429F8C01742BAE2B3DECADBC33C3E5F4BAF5E16ECB74EADBAFCB7C6705F7A9E3B6F39"
     "40383F9C5116D202A20C9229EE969C2519718303B50D0130C3352E06B014D838540F8A0C22"
     "7C0011E0F5B38E4E298ED2CB301EB4564965F55C5D79757A250A4EB9C84AB3E6539F6B6FDF"
-    "56899EA29914");
+    "56899EA29914"
+#else
+    // NOTE: Provider ID = license.widevine.com
+    "0AC102080312101705B917CC1204868B06333A2F772A8C1882B4829205228E02308201"
+    "0A028201010099ED5B3B327DAB5E24EFC3B62A95B598520AD5BCCB37503E0645B814D8"
+    "76B8DF40510441AD8CE3ADB11BB88C4E725A5E4A9E0795291D58584023A7E1AF0E38A9"
+    "1279393008610B6F158C878C7E21BFFBFEEA77E1019E1E5781E8A45F46263D14E60E80"
+    "58A8607ADCE04FAC8457B137A8D67CCDEB33705D983A21FB4EECBD4A10CA47490CA47E"
+    "AA5D438218DDBAF1CADE3392F13D6FFB6442FD31E1BF40B0C604D1C4BA4C9520A4BF97"
+    "EEBD60929AFCEEF55BBAF564E2D0E76CD7C55C73A082B996120B8359EDCE2470708268"
+    "0D6F67C6D82C4AC5F3134490A74EEC37AF4B2F010C59E82843E2582F0B6B9F5DB0FC5E"
+    "6EDF64FBD308B4711BCF1250019C9F5A0902030100013A146C6963656E73652E776964"
+    "6576696E652E636F6D128003AE347314B5A835297F271388FB7BB8CB5277D249823CDD"
+    "D1DA30B93339511EB3CCBDEA04B944B927C121346EFDBDEAC9D413917E6EC176A10438"
+    "460A503BC1952B9BA4E4CE0FC4BFC20A9808AAAF4BFCD19C1DCFCDF574CCAC28D1B410"
+    "416CF9DE8804301CBDB334CAFCD0D40978423A642E54613DF0AFCF96CA4A9249D855E4"
+    "2B3A703EF1767F6A9BD36D6BF82BE76BBF0CBA4FDE59D2ABCC76FEB64247B85C431FBC"
+    "A52266B619FC36979543FCA9CBBDBBFAFA0E1A55E755A3C7BCE655F9646F582AB9CF70"
+    "AA08B979F867F63A0B2B7FDB362C5BC4ECD555D85BCAA9C593C383C857D49DAAB77E40"
+    "B7851DDFD24998808E35B258E75D78EAC0CA16F7047304C20D93EDE4E8FF1C6F17E624"
+    "3E3F3DA8FC1709870EC45FBA823A263F0CEFA1F7093B1909928326333705043A29BDA6"
+    "F9B4342CC8DF543CB1A1182F7C5FFF33F10490FACA5B25360B76015E9C5A06AB8EE02F"
+    "00D2E8D5986104AACC4DD475FD96EE9CE4E326F21B83C7058577B38732CDDABC6A6BED"
+    "13FB0D49D38A45EB87A5F4"
+#endif
+    );
+
 
 const std::string kLicenseServer = "http://widevine-proxy.appspot.com/proxy";
 
--- old/MediaSystem.cpp	2019-05-06 17:03:21.764292738 -0400
+++ new/MediaSystem.cpp	2019-05-06 17:06:25.703180732 -0400
@@ -15,6 +15,7 @@
  * limitations under the License.
  */
 
+#include "Policy.h"
 #include "MediaSession.h"
 #include "HostImplementation.h"
 
@@ -109,6 +110,7 @@
         IMediaKeySession **f_ppiMediaKeySession) {
 
         CDMi_RESULT dr = CDMi_S_FALSE;
+        bool bCdmPrivacyMode = true;
         *f_ppiMediaKeySession = nullptr;
 
         if (_cdm == nullptr) {
@@ -118,7 +120,17 @@
                 // Setting the last parameter to true, requres serviceCertificates 
                 //   so the requests can be encrypted. Currently badly supported
                 // in the EME tests, so turn of for now :-)
-                _cdm = widevine::Cdm::create(this, &_host, false);
+                printf("CDM::create bCdmPrivacyMode %d\n", bCdmPrivacyMode);
+                _cdm = widevine::Cdm::create(this, &_host, bCdmPrivacyMode);
+                if (_cdm == nullptr) {
+                    fprintf(stderr, "Cdm::create fail!\n");
+                    return dr;
+                }
+                if(bCdmPrivacyMode) {
+                    if (widevine::Cdm::kSuccess == _cdm->setServiceCertificate(kDefaultServerCertificate)) {
+                        printf("Cdm setServiceCertificate Success\n");
+                    }
+                }
             }
         }
 
