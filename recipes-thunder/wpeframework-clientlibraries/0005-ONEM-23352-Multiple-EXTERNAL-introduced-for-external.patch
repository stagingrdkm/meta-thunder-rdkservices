From b948fc9f4f13853d9c52b2e3bcbf208419ab3f72 Mon Sep 17 00:00:00 2001
From: Mikolaj Staworzynski <mikolaj.staworzynski@redembedded.com>
Date: Tue, 14 Dec 2021 16:04:16 +0100
Subject: [PATCH] [ONEM-23352] Multiple EXTERNAL introduced for externally used
 symbols

---
 Source/cryptography/ICryptography.h                |  2 +-
 Source/cryptography/INetflixSecurity.h             |  2 +-
 .../implementation/cipher_implementation.h         |  8 ++++----
 .../implementation/diffiehellman_implementation.h  |  4 ++--
 .../implementation/hash_implementation.h           | 10 +++++-----
 .../implementation/vault_implementation.h          | 14 +++++++-------
 6 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/Source/cryptography/ICryptography.h b/Source/cryptography/ICryptography.h
index e5ad907..bd1fdeb 100644
--- a/Source/cryptography/ICryptography.h
+++ b/Source/cryptography/ICryptography.h
@@ -174,7 +174,7 @@ namespace Cryptography {
 
     struct ICryptography : virtual public Core::IUnknown {
 
-        static ICryptography* Instance(const std::string& connectionPoint);
+        EXTERNAL static ICryptography* Instance(const std::string& connectionPoint);
 
         // Retrieve a hash calculator
         virtual IHash* Hash(const hashtype hashType) = 0;
diff --git a/Source/cryptography/INetflixSecurity.h b/Source/cryptography/INetflixSecurity.h
index 0b266b2..b6e156f 100644
--- a/Source/cryptography/INetflixSecurity.h
+++ b/Source/cryptography/INetflixSecurity.h
@@ -47,7 +47,7 @@ struct INetflixSecurity : public Core::IUnknown
     virtual uint32_t DeriveKeys(const uint32_t privateDhKeyId, const uint32_t peerPublicDhKeyId, const uint32_t derivationKeyId,
                                 uint32_t& encryptionKeyId /* @out */, uint32_t& hmacKeyId /* @out */, uint32_t& wrappingKeyId /* @out */) = 0;
 
-    static INetflixSecurity* Instance();
+    EXTERNAL static INetflixSecurity* Instance();
 };
 
 } // namespace Cryptography
diff --git a/Source/cryptography/implementation/cipher_implementation.h b/Source/cryptography/implementation/cipher_implementation.h
index dc3d3a4..90429b3 100644
--- a/Source/cryptography/implementation/cipher_implementation.h
+++ b/Source/cryptography/implementation/cipher_implementation.h
@@ -39,15 +39,15 @@ typedef enum {
 struct CipherImplementation;
 
 
-struct CipherImplementation* cipher_create_aes(const struct VaultImplementation* vault, const aes_mode mode, const uint32_t key_id);
+EXTERNAL struct CipherImplementation* cipher_create_aes(const struct VaultImplementation* vault, const aes_mode mode, const uint32_t key_id);
 
-void cipher_destroy(struct CipherImplementation* cipher);
+EXTERNAL void cipher_destroy(struct CipherImplementation* cipher);
 
 
-int32_t cipher_encrypt(const struct CipherImplementation* cipher, const uint8_t iv_length, const uint8_t iv[],
+EXTERNAL int32_t cipher_encrypt(const struct CipherImplementation* cipher, const uint8_t iv_length, const uint8_t iv[],
                         const uint32_t input_length, const uint8_t input[], const uint32_t max_output_length, uint8_t output[]);
 
-int32_t cipher_decrypt(const struct CipherImplementation* cipher, const uint8_t iv_length, const uint8_t iv[],
+EXTERNAL int32_t cipher_decrypt(const struct CipherImplementation* cipher, const uint8_t iv_length, const uint8_t iv[],
                         const uint32_t input_length, const uint8_t input[], const uint32_t max_output_length, uint8_t output[]);
 
 #ifdef __cplusplus
diff --git a/Source/cryptography/implementation/diffiehellman_implementation.h b/Source/cryptography/implementation/diffiehellman_implementation.h
index e6777bd..2f00579 100644
--- a/Source/cryptography/implementation/diffiehellman_implementation.h
+++ b/Source/cryptography/implementation/diffiehellman_implementation.h
@@ -26,11 +26,11 @@
 extern "C" {
 #endif
 
-uint32_t diffiehellman_generate(struct VaultImplementation* vault,
+EXTERNAL uint32_t diffiehellman_generate(struct VaultImplementation* vault,
                                 const uint8_t generator, const uint16_t modulusSize, const uint8_t modulus[],
                                 uint32_t* private_key_id, uint32_t* public_key_id);
 
-uint32_t diffiehellman_derive(struct VaultImplementation* vault,
+EXTERNAL uint32_t diffiehellman_derive(struct VaultImplementation* vault,
                               const uint32_t private_key_id, const uint32_t peer_public_key_id, uint32_t* secret_id);
 
 #ifdef __cplusplus
diff --git a/Source/cryptography/implementation/hash_implementation.h b/Source/cryptography/implementation/hash_implementation.h
index c667049..002f985 100644
--- a/Source/cryptography/implementation/hash_implementation.h
+++ b/Source/cryptography/implementation/hash_implementation.h
@@ -37,16 +37,16 @@ typedef enum {
 struct HashImplementation;
 
 
-struct HashImplementation* hash_create(const hash_type type);
+EXTERNAL struct HashImplementation* hash_create(const hash_type type);
 
-struct HashImplementation* hash_create_hmac(const struct VaultImplementation* vault, const hash_type type, const uint32_t secret_id);
+EXTERNAL struct HashImplementation* hash_create_hmac(const struct VaultImplementation* vault, const hash_type type, const uint32_t secret_id);
 
-void hash_destroy(struct HashImplementation* signing);
+EXTERNAL void hash_destroy(struct HashImplementation* signing);
 
 
-uint32_t hash_ingest(struct HashImplementation* signing, const uint32_t length, const uint8_t data[]);
+EXTERNAL uint32_t hash_ingest(struct HashImplementation* signing, const uint32_t length, const uint8_t data[]);
 
-uint8_t hash_calculate(struct HashImplementation* signing, const uint8_t max_length, uint8_t data[]);
+EXTERNAL uint8_t hash_calculate(struct HashImplementation* signing, const uint8_t max_length, uint8_t data[]);
 
 #ifdef __cplusplus
 } // extern "C"
diff --git a/Source/cryptography/implementation/vault_implementation.h b/Source/cryptography/implementation/vault_implementation.h
index 140f336..f4d7b25 100644
--- a/Source/cryptography/implementation/vault_implementation.h
+++ b/Source/cryptography/implementation/vault_implementation.h
@@ -30,19 +30,19 @@ extern "C" {
 struct VaultImplementation;
 
 
-struct VaultImplementation* vault_instance(const enum cryptographyvault id);
+EXTERNAL struct VaultImplementation* vault_instance(const enum cryptographyvault id);
 
-uint16_t vault_size(const struct VaultImplementation* vault, const uint32_t id);
+EXTERNAL uint16_t vault_size(const struct VaultImplementation* vault, const uint32_t id);
 
-uint32_t vault_import(struct VaultImplementation* vault, const uint16_t length, const uint8_t blob[]);
+EXTERNAL uint32_t vault_import(struct VaultImplementation* vault, const uint16_t length, const uint8_t blob[]);
 
-uint16_t vault_export(const struct VaultImplementation* vault, const uint32_t id, const uint16_t max_length, uint8_t blob[]);
+EXTERNAL uint16_t vault_export(const struct VaultImplementation* vault, const uint32_t id, const uint16_t max_length, uint8_t blob[]);
 
-uint32_t vault_set(struct VaultImplementation* vault, const uint16_t length, const uint8_t blob[]);
+EXTERNAL uint32_t vault_set(struct VaultImplementation* vault, const uint16_t length, const uint8_t blob[]);
 
-uint16_t vault_get(const struct VaultImplementation* vault, const uint32_t id, const uint16_t max_length, uint8_t blob[]);
+EXTERNAL uint16_t vault_get(const struct VaultImplementation* vault, const uint32_t id, const uint16_t max_length, uint8_t blob[]);
 
-bool vault_delete(struct VaultImplementation* vault, const uint32_t id);
+EXTERNAL bool vault_delete(struct VaultImplementation* vault, const uint32_t id);
 
 #ifdef __cplusplus
 } // extern "C"
-- 
2.39.0

